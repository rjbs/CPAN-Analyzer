#!/usr/bin/env perl
use v5.36.0;

use lib 'lib';

use Aggregate;
use Getopt::Long::Descriptive;
use List::Util 'sum0';
use Text::Table;

my ($opt, $usage) = describe_options(
  '%c %o',
  [ 'file|f=s', "source file to scrape for data",     { required => 1 } ],
  [ 'min|n=i',  "number of dists to be significant",  { default => 50 } ],
);

my $min    = $opt->min;
my $file   = $opt->file;
my $result = Aggregate->scan_file($file);

Aggregate->aggregate_minorities($result, $min);

my $dz_results = $result->{'Dist::Zilla'};
my $count      = $dz_results->{distfiles}->@*;
my $cpanids    = keys $dz_results->{cpanid}->%*;

printf "There are %s dists by %s unique cpan ids using Dist::Zilla.\n\n",
  $count,
  $cpanids;

my $table = Text::Table->new('generator', \' | ', 'dists', \' | ', 'authors', \' | ', '%');

my $total = sum0 map {; 0 + $_->{distfiles}->@* } values %$result;

for my $key (
  sort { $result->{$b}{distfiles}->@* <=> $result->{$a}{distfiles}->@* }
  keys %$result
) {
  my $count = $result->{$key}{distfiles}->@*;
  $table->add(
    $key,
    $count,
    scalar(keys $result->{$key}{cpanid}->%*),
    sprintf('%0.2f%%', $count/$total*100),
  );
}

print $table;
